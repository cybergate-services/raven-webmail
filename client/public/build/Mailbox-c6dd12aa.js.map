{"version":3,"file":"Mailbox-c6dd12aa.js","sources":["../../src/lib/selection.js","../../src/lib/formatter.js","../../node_modules/svelte-material-icons/StarOutline.svelte","../../node_modules/svelte-material-icons/Star.svelte","../../node_modules/svelte-material-icons/CheckboxBlankOutline.svelte","../../node_modules/svelte-material-icons/CheckboxMarked.svelte","../../src/comp/Pages/Mailbox/MailboxMessage.svelte","../../node_modules/svelte-material-icons/Refresh.svelte","../../node_modules/svelte-material-icons/CheckboxIntermediate.svelte","../../node_modules/svelte-material-icons/Check.svelte","../../node_modules/svelte-material-icons/Plus.svelte","../../src/comp/Pages/Mailbox/Mailbox.svelte","../../src/lib/router/routes/Mailbox.svelte"],"sourcesContent":["import { writable } from \"./store\";\nexport const createSelection = (items = []) => {\n    const selection = writable(items);\n    const clear = () => selection.set([]);\n    const add = (...args) => {\n        const helper = selection.get().slice();\n        for (const item of args) {\n            if (!helper.includes(item)) {\n                helper.push(item);\n            }\n            selection.set(helper);\n        }\n    };\n    const remove = (...args) => selection.update($selection => $selection.filter(i => !args.includes(i)));\n    const has = (item) => selection.get().includes(item);\n    const toggle = (item) => {\n        has(item) ? remove(item) : add(item);\n    };\n    const isSelected = writable(has);\n    selection.subscribe(isSelected.invalidate);\n    return { ...selection, clear, add, remove, toggle, isSelected };\n};\n","const months = [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"];\nconst days = [\"dom\", \"lun\", \"mar\", \"mie\", \"jue\", \"vie\", \"sab\"];\nconst pad = (n) => n.toString().padStart(2, \"0\");\nexport const date = (str) => {\n    const now = new Date();\n    const date = new Date(str);\n    if (now.getFullYear() !== date.getFullYear())\n        return `${months[date.getMonth()]} ${date.getFullYear()}`;\n    if (now.getMonth() !== date.getMonth())\n        return `${date.getDate()} ${months[date.getMonth()]}`;\n    if (now.getDate() !== date.getDate()) {\n        return `${days[date.getDay()]} ${date.getDate()}`;\n    }\n    return `${date.getHours()}:${pad(date.getMinutes())}`;\n};\n","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M12,15.39L8.24,17.66L9.23,13.38L5.91,10.5L10.29,10.13L12,6.09L13.71,10.13L18.09,10.5L14.77,13.38L15.76,17.66M22,9.24L14.81,8.63L12,2L9.19,8.63L2,9.24L7.45,13.97L5.82,21L12,17.27L18.18,21L16.54,13.97L22,9.24Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" fill=\"{color}\"/></svg>","<style>\n  .message {\n    font: inherit;\n    text-decoration: none;\n    flex: none;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-top:#d8dcdf 1px solid;\n    padding: 0 1em;\n    height: 3em;\n  }\n\n  .show-hover {\n    display: none !important;\n  }\n\n  .message:hover .show-hover {\n    display: flex !important;\n  }\n\n  .message:hover .hide-hover {\n    display: none;\n  }\n\n\n\n  .message:last-of-type {\n    border-bottom: #d8dcdf 1px solid;\n  }\n  \n  .message:last-of-type.selected {\n    border-bottom-color: #a5bad9;\n  }\n\n  .message:first-child {\n    border-top: none;\n  }\n  \n  .selected {\n    background-color: #c2dbff;\n    border-bottom-color: #a5bad9; \n    border-top-color: #a5bad9; \n  }\n\n  .selected + .message {\n    border-top-color: #a5bad9;\n  }\n\n  x-cell {\n    flex: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: none;\n    width: 2em;\n    height: 2em;\n    font-size: 1.25em;\n    cursor: pointer;\n    border-radius: 50%;\n    transition: color 200ms ease;\n  }\n\n  .icon > :global(svg) {\n    position: absolute;\n  }\n\n  .flagged {\n    color: #e3c066;\n  }\n  \n  .from {\n    padding: 0 1em;\n    flex: 2;\n  }\n\n  .subject-intro {\n    flex: 6;\n  }\n\n  .intro {\n    opacity: 0.5;\n    margin-inline-start: 0.5em;\n  }\n\n  .date {\n    text-align: end;\n    opacity: 0.5;\n    /*text-transform: capitalize;*/\n    flex: none;\n    margin-inline-start: 1em;\n    font-size: 0.8em;\n  }\n\n  .unseen {\n    font-weight: 700;\n  }\n</style>\n\n<script>\n  import {date} from \"lib@formatter.js\";\n  import {writable} from \"lib@store.js\";\n  import {slide, fly} from \"svelte/transition\";\n\n  import UnFlagged from \"svelte-material-icons/StarOutline.svelte\";\n  import Flagged from \"svelte-material-icons/Star.svelte\";\n\n  import On from \"svelte-material-icons/CheckboxBlankOutline.svelte\";\n  import Off from \"svelte-material-icons/CheckboxMarked.svelte\";\n\n  import {Ripple} from \"svelte-mui\";\n\n  import {getContext, onDestroy} from \"svelte\";\n  const selection = getContext(\"mailbox-selection\");\n  const {isSelected, add, remove, toggle} = selection;\n\n  import {create} from \"comp@Compose/compose.js\";\n\n  import {drafts, sent} from \"lib@client/mailboxes.js\";\n  import * as mess from \"lib@client/messages.js\";\n\n  export let message;\n  export let mailbox;\n\n  let isDraft, isSent, selected;\n  $: isDraft = mailbox === drafts;\n  $: isSent = mailbox === sent;\n  $: selected = $isSelected(message);\n\n  const flag = e => {\n    mess.flag($mailbox.id, [$message.id], !$message.flagged);\n    message.update(m => ({...m, flagged: !m.flagged}))\n  }\n\n  let unsub;\n\n  const click = async e => {\n    if (isDraft) {\n      e.preventDefault();\n      if ( !$message.seen ) {\n        //mess.updateSeen($mailbox.id, [$message.id], true)\n        message.update(m => ({...m, seen: true}));\n      }\n      \n      const $draft = await mess.getDraft($message.id);\n      const draft = writable($draft);\n      unsub = draft.subscribe(d => {\n        message.update(m => ({...m, ...d}))\n      })\n      \n      create(draft)\n    }\n  }\n\n  onDestroy(() => unsub && unsub())\n\n   const {locale: l} = getContext(\"app\");\n  export let locale = $l.mailboxMessage;\n</script>\n\n<a href=\"#!/mailbox/{$mailbox.id}/message/{$message.id}\" class=\"na message\" class:selected class:unseen={!$message.seen} on:click={click}>\n  <x-cell class=\"btn-dark icon cell-selected\" on:click|preventDefault|stopPropagation={() => toggle(message)}>\n    {#if selected}\n      <Off />\n    {:else}\n      <On />\n    {/if}\n    <Ripple />\n  </x-cell>\n\n\n  <x-cell class=\"btn-dark icon\" class:flagged={$message.flagged} on:click|preventDefault|stopPropagation={flag}>\n    {#if $message.flagged}\n      <Flagged />\n    {:else}\n      <UnFlagged />\n    {/if}\n    <Ripple />\n  </x-cell>\n\n  <x-cell class=\"from\">\n    {#if isSent || isDraft}\n      <span class=\"for\">{locale.to} </span>{($message.to || []).map(to => to.name || to.address).filter(Boolean).join(\", \")}\n    {:else}\n      {$message.from.name || $message.from.address || \"\"}\n    {/if}\n  </x-cell>\n\n\n  <x-cell class=\"subject-intro\">\n    <span class=\"subject\">{$message.subject || \"\"}</span>\n    <span class=\"intro\">{$message.intro || \"\"}</span>\n  </x-cell>\n\n\n  <x-cell class=\"date\">\n    {$message.date && date($message.date)}\n  </x-cell>\n</a>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V5H19V19M17,17H7V7H17V17Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" fill=\"{color}\"/></svg>","<style>\n  x-tab-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    padding-bottom: 3em;\n  }\n\n  x-mailbox-empty {\n    flex: none;\n    margin: 2em auto;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: #333;\n    font-size: 1.1em;\n  }\n\n  .label {\n    font-weight: 500;\n    margin-top: 1em;\n  }\n\n  .select {\n    margin-inline-start: -0.15em;\n  }\n\n  .only-when-selection{\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  x-selection-info {\n    display: flex;\n    flex: none;\n    flex-direction: row-reverse;\n    align-items: center;\n    margin-inline-start: auto;\n    background: #c2dbff;\n    padding: 0.4em 0.5em;\n    border-radius: 100px;\n    color: #555;\n  }\n  \n  x-selection-info > :global(svg) {\n    font-size: 1.1em;\n  }\n\n  x-selection-info > span {\n    font-size: 0.8em;\n    margin: 0 0.5em;\n  }\n\n  x-loadmore {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--pc);\n    padding: 0.5em;\n    font-size: 2.5em;\n    min-height: auto;\n  }\n\n  x-loadmore-loading, x-loadmore-button {\n    display: flex;\n    flex: none;\n    width: 1em;\n    height: 1em;\n    align-items: center;\n    justify-content: center;\n  }\n\n  x-loadmore-button {\n    cursor: pointer;\n    border-radius: 50%;\n  }\n\n  x-mailbox-message {\n    position: relative;\n    z-index: 2;\n    display: flex;\n    flex-direction: column;\n    flex: none;\n    justify-items: stretch;\n    align-items: stretch;\n    background: #fff;\n    transition: opacity 150ms ease, margin 150ms ease;\n  }\n\n  x-tab-content > :global(.removed) {\n    z-index: 1;\n    margin-block-end: -3.0625rem;\n    opacity: 0;\n  }\n</style>\n\n<script>\n  import {getContext, setContext, onMount} from \"svelte\";\n  import {fade} from \"svelte/transition\";\n  import {flip} from \"svelte/animate\";\n\n  import {writable} from \"../../../lib/store\";\n\n  import Item from \"./MailboxMessage.svelte\";\n  import Tab from \"../Main.svelte\";\n  import Topbar from \"../ActionBar.svelte\";\n\n  //import EmptyFolder from \"svelte-material-icons/FolderOpenOutline.svelte\";\n\n  import Refresh from \"svelte-material-icons/Refresh.svelte\";\n  import Delete from \"svelte-material-icons/DeleteOutline.svelte\";\n  import MarkUnSeen from \"svelte-material-icons/EmailOutline.svelte\";\n  import MarkSeen from \"svelte-material-icons/EmailOpenOutline.svelte\";\n  import MarkSpam from \"svelte-material-icons/AlertDecagramOutline.svelte\";\n  import UnMarkSpam from \"svelte-material-icons/EmailCheckOutline.svelte\";\n  import Resend from \"svelte-material-icons/EmailSendOutline.svelte\";\n  import Reply from \"svelte-material-icons/EmailReceiveOutline.svelte\";\n  //import MoveTo from \"svelte-material-icons/FolderMoveOutline.svelte\";\n  //import GoBack from \"svelte-material-icons/ArrowLeft.svelte\";  \n  import CheckAll from \"svelte-material-icons/CheckboxMarked.svelte\";\n  import CheckNone from \"svelte-material-icons/CheckboxBlankOutline.svelte\";\n  import CheckSome from \"svelte-material-icons/CheckboxIntermediate.svelte\";\n\n  import CheckCircle from \"svelte-material-icons/CheckCircle.svelte\";\n  import Check from \"svelte-material-icons/Check.svelte\";\n\n  import More from \"svelte-material-icons/Plus.svelte\";\n  import CircularProgress from \"../../CircularProgress.svelte\";\n\n  import {Ripple} from \"svelte-mui\";\n  import MoveTo from \"../MoveTo.svelte\";\n\n  export let mailbox;\n  export let messages;\n  export let next;\n  export let prev;\n  export let selection;\n  export let scroll;\n\n  setContext(\"mailbox-selection\", selection);\n\n  import {junk, trash, drafts, sent} from \"../../../lib/client/mailboxes\";\n  import * as mess from \"../../../lib/client/messages\";\n\n  let isJunk, isTrash, isDraft, isSent;\n  $: isJunk = mailbox === junk;\n  $: isTrash = mailbox === trash;\n  $: isDraft = mailbox === drafts;\n  $: isSent = mailbox === sent;\n\n  const handleSelection = () => {\n    selection.update($sel => {\n      if($selection.length !== $messages.length) {\n        return $messages.slice();\n      } else {\n        return [];\n      }\n    })\n  }\n\n  const onSelectionMoved = () => {\n    const selected = selection.get();\n    messages.update(ms => ms.filter(m => !selected.includes(m)));\n    selection.clear();\n    if(messages.get().length < 10) {\n      loadMore();\n    }\n  } \n  \n\n  const updateSeen = async (seen) => {\n    if($selection.length) {\n      $selection.forEach(m => m.update(m => ({...m, seen})))\n      selection.invalidate();\n      await mess.updateSeen($mailbox.id, $selection.map(i => i.get().id), seen)\n    }\n  }\n\n  const markAsSpam = async (value) => {\n    mess.markAsSpam($mailbox.id, $selection.map(i => i.get().id), value);\n    onSelectionMoved();\n  }\n\n  const del = async () => {\n    mess.del($mailbox.id, $selection.map(i => i.get().id));\n    onSelectionMoved();\n  }\n\n  import {list} from \"lib@client/messages.js\";\n  \n  let reloading = false;\n  let reloadTimes = 0;\n  const reload = async () => {\n    if (reloading)\n      return;\n    reloadTimes++;\n    reloading = true;\n    const json = await list($mailbox.id);\n    messages.set(json.messages.map(m => writable(m)))\n    prev.set(json.prev);\n    next.set(json.next);\n    selection.clear();\n    reloading = false;\n  }\n\n  let loadingMore = false;\n  const loadMore = async () => {\n    if ( !$next )\n      return;\n    \n    loadingMore = true;\n    const res = await mess.next($mailbox.id, $next);\n    messages.update(m => [...m, ...res.messages.map(m => writable(m))])\n    next.set(res.next);\n    prev.set(res.prev);\n    loadingMore = false;\n  }\n\n  import {quadOut} from \"svelte/easing\";\n  const flyInsert = (node, params) => {\n    node.classList.add(\"removed\");\n    node.style.zIndex = \"1\";\n    setTimeout(() => node.classList.remove(\"removed\"), 1);\n    setTimeout(() => node.style.zIndex = null, 150)\n    return {duration: 150}\n    /*\n    return {\n      easing: quadOut,\n      ...params,\n      css: (t, u) => `z-index: 1; opacity: ${t}; margin-block-end: -${u * h}px;`\n    }\n    */\n  }\n\n  const flyRemove = (node) => {\n    node.classList.add(\"removed\");\n    return {duration: 150}\n  }\n\n  const {locale: l, trans} = getContext(\"app\");\n  export let locale = $l;\n\n  import {mailboxMeta} from \"../../../lib/util\";\n  let meta;\n  $: meta = mailboxMeta($mailbox, locale.mailbox.title);\n</script>\n\n<svelte:head>\n  <title>{$mailbox.unseen ? `(${$mailbox.unseen}) ` : \"\"}{meta.label}</title>\n</svelte:head>\n\n<Tab>\n  <Topbar scrolled={$scroll !== 0}>\n\n    <x-action-group class=\"select\">\n      <x-action class=\"btn-dark\" data-tooltip={locale.actions.select} on:click={handleSelection}>\n        <Ripple />\n        {#if $selection.length === 0}\n          <CheckNone />\n        {:else if $selection.length === $messages.length}\n          <CheckAll />\n        {:else}\n          <CheckSome />\n        {/if}\n      </x-action>\n\n      <x-action class=\"btn-dark reload\" data-tooltip={locale.actions.reload} on:click={reload}>\n        <div style=\"display: flex; transition: transform 300ms ease; transform: rotate({360 * reloadTimes}deg)\">\n          <Refresh  />\n        </div>\n        <Ripple />\n      </x-action>\n    </x-action-group>\n\n    {#if $selection.length !== 0}\n      <div class=\"only-when-selection\" transition:fade|local={{duration: 150}}>\n        <x-action-group>\n          {#if $selection.every(m => !m.get().seen)}\n            <x-action  class=\"btn-dark\" data-tooltip={locale.actions.markAsRead} on:click={() => updateSeen(true)}>\n              <MarkSeen />\n              <Ripple />\n            </x-action>\n          {:else}\n            <x-action class=\"btn-dark\" data-tooltip={locale.actions.markAsUnread} on:click={() => updateSeen(false)}>\n              <MarkUnSeen />\n              <Ripple />\n            </x-action>\n          {/if}\n\n          {#if isJunk}\n            <x-action class=\"btn-dark\" data-tooltip={locale.actions.unMarkAsSpam} on:click={() => markAsSpam(false)}>\n              <UnMarkSpam />\n              <Ripple />\n            </x-action>\n          {:else if !isDraft && !isSent && !isTrash}\n            <x-action class=\"btn-dark\" data-tooltip={locale.actions.markAsSpam} on:click={() => markAsSpam(true)}>\n              <MarkSpam />\n              <Ripple />\n            </x-action>\n          {/if}\n\n          <x-action class=\"btn-dark\" data-tooltip={\n              isTrash ? locale.actions.deletePermanently :\n              isDraft ? locale.actions.discardDrafts :\n              locale.actions.delete\n          } on:click={() => del()}>\n            <Delete />\n            <Ripple />\n          </x-action>\n        </x-action-group>\n\n\n        <x-action-group>\n          <MoveTo {mailbox} {selection} on:moved={onSelectionMoved}/>\n        </x-action-group>\n  \n        <x-selection-info>\n          <Check />\n          <span>{$trans(\"selection.title\", {n: $selection.length})}</span>\n        </x-selection-info>\n      </div>\n    {/if}\n\n  </Topbar>\n  \n  <x-tab-content on:scroll={event => $scroll = event.target.scrollTop}>\n    {#each $messages as message (`${$mailbox.id}-${message.get().id}`)}\n        <x-mailbox-message out:flyRemove|local={{}} in:flyInsert|local={{duration: 150}}>\n          <Item {message} {mailbox} />\n        </x-mailbox-message>\n    {:else}\n      {#if !loadingMore}\n        <x-mailbox-empty>\n          <span class=\"label\">No hay mensajes en esta carpeta</span>\n        </x-mailbox-empty>\n      {/if}\n    {/each}\n    \n    {#if loadingMore || $next}\n      <x-loadmore>\n        {#if loadingMore}\n          <x-loadmore-loading in:fade|local={{delay: 150, duration: 150}}>\n            <CircularProgress size=\"0.75em\"/>\n          </x-loadmore-loading>\n        {:else if $next}\n          <x-loadmore-button in:fade|local={{delay: 150, duration: 150}} class=\"btn-dark\" on:click={loadMore}>\n            <More />\n            <Ripple />\n          </x-loadmore-button>\n        {/if}\n      </x-loadmore>\n    {/if}\n  </x-tab-content>\n</Tab>","<script context=\"module\">\n  import {user} from  \"../../client/client\";\n  import {get} from \"../../client/mailboxes\";\n  import {list} from \"../../client/messages\";\n  import {createSelection} from \"../../selection\";\n\n  export async function preload($page, {client}){\n    \n    if ( !user.get() ) {\n      return this.redirect(\"#!/login\");\n    }\n\n    const mailbox = get($page.params.mailbox);\n    if (mailbox == null ) {\n      return this.error({code: 404, message: \"La página no existe\"})\n    } else {\n      const json = await list($page.params.mailbox)\n      \n      const messages = writable(json.messages.map(m => writable(m)));\n      const next = writable(json.next);\n      const prev = writable(json.prev);\n      const selection = createSelection();\n      const scroll = writable(0);\n\n      return {mailbox, messages, prev, next, selection, scroll};\n    }\n  }\n</script>\n\n<script>\n  import {writable} from \"../../store\";\n  import Mailbox from \"../../../comp/Pages/Mailbox/Mailbox.svelte\";\n  \n  // stores;\n  export let mailbox \n  export let messages;\n  export let prev;\n  export let next;\n  export let selection;\n  export let scroll;\n</script>\n\n<Mailbox {mailbox} {messages} {prev} {next} {selection} {scroll} />"],"names":["months","days","date","str","now","Date","getFullYear","getMonth","getDate","getDay","getHours","n","getMinutes","toString","padStart","ctx","size","width","height","color","viewBox","from","name","address","to","map","filter","Boolean","join","subject","intro","flagged","id","seen","selection","getContext","isSelected","add","remove","toggle","message","isDraft","isSent","selected","mailbox","unsub","onDestroy","locale","l","$l","mailboxMessage","drafts","sent","$isSelected","e","mess.flag","$mailbox","$message","update","m","preventDefault","$draft","mess.getDraft","draft","writable","subscribe","d","create","length","every","actions","deletePermanently","discardDrafts","delete","duration","markAsUnread","markAsRead","markAsSpam","unMarkAsSpam","select","reload","delay","get","unseen","label","messages","next","prev","isJunk","isTrash","scroll","setContext","onSelectionMoved","ms","includes","clear","loadMore","updateSeen","$selection","forEach","invalidate","mess.updateSeen","i","mess.markAsSpam","value","del","mess.del","reloading","reloadTimes","loadingMore","$next","res","mess.next","set","trans","meta","junk","trash","mailboxMeta","title","$sel","$messages","slice","json","list","node","params","classList","style","zIndex","setTimeout","event","$scroll","target","scrollTop","preload","$page","client","user","this","redirect","error","code","items","args","helper","item","push","has","createSelection"],"mappings":"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"}