{"version":3,"file":"Login-c3cf0436.js","sources":["../../src/comp/TextField.svelte","../../node_modules/svelte-material-icons/Eye.svelte","../../node_modules/svelte-material-icons/EyeOff.svelte","../../src/comp/Password.svelte","../../src/lib/router/routes/Login.svelte"],"sourcesContent":["<style>\n.text-field{\n  position: relative;\n  display: flex;\n}\n\ninput, textarea{\n  font: inherit;\n  box-sizing: content-box;\n  outline: none;\n  flex: 1;\n  margin: 0;\n  border: 1px rgba(0,0,0,0.23) solid;\n  border-radius: 3px;\n  padding: 0.9em 0.75em;\n  width: 100%;\n  color: inherit;\n  transition: border-color 150ms ease-in-out;\n  background-color: #fff;\n}\n\ntextarea{\n  resize: none;\n  overflow: auto;\n}\n\ninput:disabled, textarea:disabled{\n  color: rgba(0,0,0,0.5);\n}\n\ninput:focus, textarea:focus{\n  border-color: var(--pc);\n}\n\n.label{\n  position: absolute;\n  top: calc(2px + 0.9em);\n  left: calc(1px + 0.75em);\n  padding: 0 0.4em;\n  margin: 0 -0.4em;\n  pointer-events: none;\n  background: #fff;\n  color: rgba(0,0,0,0.5);\n  transition: color 150ms ease, transform 150ms ease-in-out;\n  transform-origin: top left;\n  max-width: calc(100% - 1em);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.text-field:not(.empty) > .label,\ninput:focus + .label,\ntextarea:focus + .label{\n  transform: scale(0.7) translateY(-165%);\n}\n\ninput:focus + .label,\ntextarea:focus + .label{\n  color: var(--dark);\n}\n\n</style>\n\n<script>\nlet className = \"\";\nexport {className as class};\nexport let type = \"text\";\nexport let value = \"\";\n//export let placeholder = \"\";\nexport let label = null;\nexport let disabled = false;\nexport let readonly = false;\nexport let spellcheck = null; // string\nexport let resize = null; // (none) vertical horizontal both unset initial inherit\nexport let id = null;\nexport let name = null;\nexport let step = null;\nexport let max = null;\nexport let min = null;\n\nexport let multiline = false;\nexport let minrows = 1;\nexport let maxrows = Infinity;\n\nlet rows = 1;\n$:{\n  if(multiline){\n    rows = Math.max(minrows, Math.min(maxrows, value.split(\"\\n\").length))\n  };\n}\n$: empty = value === \"\";\n\nconst handleChange = (event) => {\n  if(type === \"number\"){\n    value = parseFloat(event.target.value) || 0;\n  } else {\n    value = event.target.value;\n  }\n}\n</script>\n\n<div \n  class=\"text-field {className}\"\n  class:empty\n  class:disabled\n  class:readonly\n  class:multiline\n>\n  {#if !multiline}\n    <input \n    {id}\n    {name}\n    {type}\n    {step}\n    {max}\n    {min}\n    {value}\n    {readonly}\n    {disabled}\n    {spellcheck}\n    on:input={handleChange}\n    on:input\n    on:focus\n    on:blur\n    on:change\n    on:keypress\n    />\n    {#if label != null}\n      <span class=\"label\">{label}</span>\n    {/if}\n  {:else}\n    <textarea \n    {id}\n    {name}\n    {value}\n    {readonly}\n    {disabled}\n    {rows}\n    {spellcheck}\n    on:input={handleChange}\n    on:input\n    on:focus\n    on:blur\n    on:change\n    on:keypress\n    style={resize ? `resize: \" ${resize}` : ''}\n    />\n    {#if label != null}\n      <span class=\"label\">{label}</span>\n    {/if}\n  {/if}\n</div>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z\" fill=\"{color}\"/></svg>","<style>\n  .password{\n    position: relative;\n  }\n\n  .icon{\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 2em;\n    height: 100%;\n    cursor: pointer;\n    color: rgba(0,0,0,0.4);\n    transition: color 300ms ease;\n    display: flex;\n    font-size: 1.5em;\n    user-select: none;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .icon:hover{\n    color: rgba(0,0,0,0.75);    \n  }\n</style>\n\n<script>\nimport TextField from './TextField.svelte';\nimport Button from './Button.svelte';\n\nimport VisibilityOn from 'svelte-material-icons/Eye.svelte';\nimport VisibilityOff from 'svelte-material-icons/EyeOff.svelte';\n\nlet className = \"\";\nexport {className as class};\n\nexport let value = \"\"\nexport let textFieldProps = {};\nexport let visible = false;\nexport let label = void 0;\nexport let id = void 0;\nexport let name = void 0;\n\n$: textFieldProps.type = visible ? \"text\" : \"password\";\n$: label != null && (textFieldProps.label = label);\n\n// prevent keyboard\nexport const toggle = () => visible = !visible;\n</script>\n\n<div class=\"password {className}\">\n  <TextField {...textFieldProps} bind:value \n  {id}\n  {name}\n  on:input\n  on:focus\n  on:blur\n  on:change\n  />\n  <div class=\"icon\" on:mousedown|preventDefault on:click|preventDefault={toggle}>\n    {#if visible}\n      <VisibilityOn/>\n    {:else}\n      <VisibilityOff/>\n    {/if}\n  </div>\n</div>","<style>\n  form{\n    box-sizing: border-box; \n    border-top: 4px solid var(--pc);\n    border-radius: 3px;\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,.2);\n    background: #fff;\n    padding: 3em;\n    width: 90%;\n    max-width: 400px;\n    margin: 0 auto;\n  }\n  \n  .field{\n    margin-bottom: 3em;\n  }\n\n  .button{\n    display: flex;\n    flex-direction: row-reverse;\n  }\n\n  h1 {\n    text-align: center;\n    margin: 2em 0;\n  }\n</style>\n\n<script>\n  import {getContext} from \"svelte\"; \n\n  //import Page from \"/comp/Page.svelte\";\n  import TextField from \"comp@TextField.svelte\";\n  import Password from \"comp@Password.svelte\";\n  //import Button from \"comp@Button.svelte\";\n  import {Button} from \"svelte-mui\";\n\n  import {getNotifier} from \"comp@Notify/notify.js\";\n\n  let username = \"\";\n  let password = \"\";\n\n  import {login} from \"lib@client/client.js\"\n\n  const handleSubmit = async event => {\n    \n    event.preventDefault();\n    \n    try {\n      const user = await fetch(\"/login\", {\n        method: \"POST\", \n        headers: {\"content-type\": \"application/json\"},\n        body: JSON.stringify({username, password})\n      }).then(res => res.json());\n\n      if(user.error) {\n        throw new Error(user.error.message);\n      }\n      location.href = \"/\";\n    } catch (e) {\n      getNotifier().add({variant: \"error\", text: e.message});\n    }\n  }\n\n  const {locale: l} = getContext(\"app\");\n  export let locale = $l.login;\n\n</script>\n\n<svelte:head>\n  <title>{locale.title}</title>\n</svelte:head>\n\n<h1>{locale.title}</h1>\n<form action=\"#!/login\" method=\"post\" on:submit={handleSubmit}>\n  <div class=\"field\">\n    <TextField bind:value={username} name=\"username\" label={locale.labels.username}/>\n  </div>\n  <div class=\"field\">\n    <Password bind:value={password} name=\"password\" label={locale.labels.password}/>\n  </div>\n  <div class=\"button\">\n    <Button color=\"var(--pc)\" raised>\n      {locale.action}\n    </Button>\n  </div>\n</form>"],"names":["ctx","className","type","value","label","disabled","readonly","spellcheck","resize","id","name","step","max","min","multiline","minrows","maxrows","Infinity","rows","Math","split","length","empty","event","parseFloat","target","size","width","height","color","viewBox","textFieldProps","visible","action","title","labels","username","password","locale","l","getContext","$l","login","preventDefault","user","fetch","method","headers","content-type","body","JSON","stringify","then","res","json","error","Error","message","location","href","e","getNotifier","add","variant","text"],"mappings":"sSAoJkB,MAATA,+LAFEA,kBAAsBA,KAAW,0GAN9BA,0SAMHA,kBAAsBA,KAAW,oBAE1B,MAATA,iJApBS,MAATA,uUAPKA,mXAOI,MAATA,sKAqBkBA,mFAAAA,uEApBAA,mFAAAA,mEApBnBA,oFANaA,6OAAAA,mNAtGjBC,EAAY,YAELC,EAAO,iBACPC,EAAQ,aAERC,EAAQ,kBACRC,GAAW,eACXC,GAAW,iBACXC,EAAa,gBACbC,EAAS,YACTC,EAAK,cACLC,EAAO,cACPC,EAAO,aACPC,EAAM,aACNC,EAAM,mBAENC,GAAY,cACZC,EAAU,cACVC,EAAUC,EAAAA,KAEjBC,EAAO,yhBAENJ,QACDI,EAAOC,KAAKP,IAAIG,EAASI,KAAKN,IAAIG,EAASb,EAAMiB,MAAM,MAAMC,6BAG9DC,EAAkB,KAAVnB,qCAEWoB,QAElBpB,EADU,WAATD,EACOsB,WAAWD,EAAME,OAAOtB,QAAU,EAElCoB,EAAME,OAAOtB,iuBCzBqSH,kBAAjTA,mBAAiBA,oBAAmBA,wDAA6QA,uBAAjTA,wBAAiBA,yBAAmBA,yDAPpC0B,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,m7BCGsnB9B,kBAAhoBA,mBAAiBA,oBAAmBA,wDAA4lBA,uBAAhoBA,wBAAiBA,yBAAmBA,yDAPpC0B,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,iqBC8CN9B,6TASRA,2JAVaA,2IASmDA,2CARxDA,6OADKA,mLA3ClBC,EAAY,aAGLE,EAAQ,sBACR4B,iBACAC,GAAU,YACV5B,SACAK,WACAC,6QAERqB,EAAe7B,KAAO8B,EAAU,OAAS,8BAChC,MAAT5B,OAAkB2B,EAAe3B,MAAQA,2BAGhB4B,GAAWA,gUC8DhChC,KAAOiC,iEAAPjC,KAAOiC,sFAVTjC,KAAOkC,0DAHFlC,KAAOkC,mCAM2ClC,KAAOmC,OAAOC,mBAA/CpC,eAAAA,uHAGgCA,KAAOmC,OAAOE,mBAA/CrC,eAAAA,wpBALuBA,kCAJvCA,KAAOkC,6CAGZlC,KAAOkC,2CAGgDlC,KAAOmC,OAAOC,iCAA/CpC,qDAGgCA,KAAOmC,OAAOE,iCAA/CrC,qTApEpBoC,EAAW,GACXC,EAAW,SAwBRC,OAAQC,GAAKC,EAAW,qCACpBF,EAASG,EAAGC,2EAnBrBnB,EAAMoB,2BAGEC,QAAaC,MAAM,UACvBC,OAAQ,OACRC,SAAUC,eAAgB,oBAC1BC,KAAMC,KAAKC,WAAWf,SAAAA,EAAUC,SAAAA,MAC/Be,KAAKC,GAAOA,EAAIC,WAEhBV,EAAKW,gBACIC,MAAMZ,EAAKW,MAAME,SAE7BC,SAASC,KAAO,UACTC,GACPC,IAAcC,KAAKC,QAAS,QAASC,KAAMJ,EAAEH,4BA4CxBrB,wBAGDC"}